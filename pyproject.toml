[build-system]
# Defined by PEP 518
requires = [
    "setuptools>=61",
    "setuptools-scm[toml]>=7",
    "wheel"
]
# Defined by PEP 517
build-backend = "setuptools.build_meta"

[project]
authors = [
    {name = "Bill Little", email = "bjlittle.pub@gmail.com"}
]
classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
]
dependencies = [
    "geovista>=0.2",
    "scitools-iris>=3.2",
]
description = "Structured Local Area Model"
dynamic = [
    "readme",
    "version",
]
keywords = [
    "curvilinear",
    "earth-science",
    "geovista",
    "grid",
    "lam",
    "mesh",
    "python",
    "pyvista",
    "rectilinear",
    "ugrid",
    "unstructured",
    "vtk",
]
license = {text = "BSD-3-Clause"}
name = "geovista-slam"
requires-python = ">=3.9"

[project.optional-dependencies]
dev = [
    "pre-commit",
]
test = [
    "codecov",
    "pytest>=6.0",
    "pytest-cov",
]

[project.urls]
Code = "https://github.com/bjlittle/geovista-slam"
Issues = "https://github.com/bjlittle/geovista-slam/issues"

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311"]
include = '\.pyi?$'

[tool.check-manifest]
ignore = [
    "src/slam/_version.py",
]

[tool.pytest.ini_options]
addopts = "-ra -v --doctest-modules --doctest-continue-on-failure --import-mode=importlib"
minversion = "6.0"
doctest_optionflags = "NORMALIZE_WHITESPACE ELLIPSIS NUMBER"
testpaths = "tests"

[tool.ruff]
line-length = 88
target-version = "py39"
select = [
    # pyflakes
    "F",
    # pycodestyle
    "E",
    "W",
    # flake8-bugbear
    "B",
    # flake8-comprehensions
    "C4",
    # isort
    "I",
    # pyupgrade
    "UP",
]

[tool.ruff.isort]
force-sort-within-sections = true
known-first-party = ["slam"]

[tool.ruff.mccabe]
max-complexity = 22

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.setuptools]
license-files = ["LICENSE"]
zip-safe = false

[tool.setuptools.dynamic]
readme = {file = "README.md", content-type = "text/markdown"}

[tool.setuptools.packages.find]
include = ["slam*"]
where = ["src"]

[tool.setuptools_scm]
write_to = "src/slam/_version.py"
local_scheme = "dirty-tag"
version_scheme = "release-branch-semver"
